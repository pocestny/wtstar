#mode cCRCW

/*
compute maximum (assume distinct positive elements)
T = O(log log n)
W = O(n)
*/

input int A[_];
output int max;

int n = A.size;

int max_const(int A[_]) {
  int n = A.size;
  int max;
  pardo(i:n) {
    int lmax=1;
    pardo (j:n)
      if (A[j]>A[i]) lmax=0;
    if (lmax)
      max=i;
  }
  return A[max];
}

int max_log(int A[_]) {
  int n=2^log(A.size);
  int Y[n];
  pardo(i:n) Y[i]=-1;
  pardo(i:A.size) Y[i]=A[i];
  for (int t = 0; 2 ^ t < n; t++)
    pardo(i : n / 2 ^ (t + 1)) {
      int z;
      if (Y[2 * i] > Y[2 * i + 1])
        z=Y[2*i];
        else
        z=Y[2*i+1];
      Y[i]=z;
      }

  return Y[0];
}



max = max_log(A);
