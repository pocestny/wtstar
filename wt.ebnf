program ::= ( type_definition | ( "output" | ) variable_declaration | "input" input_variable_declaration | function_definition | statement ) + 

type_definition ::= "type" identifier "{" ( typename identifier ( "," identifier ) * ";" ) + "}"

variable_declaration ::= typename variable_declarator ( "," variable_declarator )*  ";"

variable_declarator ::= identifier ( "[" expression ("," expression) * "]" |  ( | "=" initializer ))

input_variable_declaration ::= "input" typename input_variable_declarator ( "," input_variable_declarator )*  ";"

input_variable_declarator ::= identifier ( "[" "_" ("," "_")* "]" | )


function_definition ::= typename identifier "(" (|parameter_declarator ("," parameter_declarator)*) ")" (";" | scoped_statement )

parameter_declarator ::= typename identifier ( "[" _ ("," "_")* "]" | )

expression ::= expression operator expression 




